#include <iostream>
#include <cmath>

using namespace std;

int main() {

	int holes;
	double holePosi[10000][2]; //Index: x for 0, y for 1.
	double gopherPosiX, gopherPosY;
	double dogPosiX, dogPosiY;
	double gopherDistance, dogDistance;
	bool hasEscaped;

	while (cin >> holes) {
		hasEscaped = false;
		cin >> gopherPosiX >> gopherPosY;
		cin >> dogPosiX >> dogPosiY;
		for (int i = 0; i < holes; i++)
			cin >> holePosi[i][0] >> holePosi[i][1];

		for (int i = 0; i < holes; i++) {
			gopherDistance = 1000 * sqrt(pow(abs(holePosi[i][0] - gopherPosiX), 2) + pow(abs(holePosi[i][1] - gopherPosY), 2));
			dogDistance = 1000 * sqrt(pow(abs(holePosi[i][0] - dogPosiX), 2) + pow(abs(holePosi[i][1] - dogPosiY), 2));
			//cout << "gopherDistance:" << gopherDistance << endl;
			//cout << "dogDistance:" << dogDistance << endl;
			if (2 * gopherDistance <= dogDistance) {
				printf("The gopher can escape through the hole at (%.3lf,%.3lf).\n", holePosi[i][0], holePosi[i][1]);
				hasEscaped = true;
				break;
			}
		}
		if (!hasEscaped)
			cout << "The gopher cannot escape." << endl;
	}
	return 0;
}
